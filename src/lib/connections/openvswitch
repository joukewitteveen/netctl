# Contributed by: Jonathan Hudson <jh+arch@daria.co.uk>

. "$SUBR_DIR/ip"


OVSCTL="/usr/bin/ovs-vsctl"
declare -a BindsToInterfaces

openvswitch_up() {
    if is_yes "${OvsFakeBridge:-no}"; then
      if [ -z "$Tag" ]; then
       report_error "Open vSwitch fake-bridges require a VLAN Tag"
      fi
      if ! $OVSCTL br-exists "$Interface"; then
        $OVSCTL add-br "$Interface" "$BindsToInterfaces" "$Tag"
      fi
      ip_set
      exit
    fi
    

    if [ -n "$VlanMode" ]; then
      if [[ $VlanMode != @(trunk|access|native-tagged|native-untagged) ]]; then
        report_error "Invalid VLAN Mode '$VlanMode' for Open vSwicth Interface '$Interface'"
      fi
    fi
    if ! $OVSCTL br-exists "$Interface"; then
        $OVSCTL add-br "$Interface"
    fi

    for ovs_client in "${BindsToInterfaces[@]}"; do
      ip link set "$ovs_client" promisc on up
      ip addr flush dev "$ovs_client"
      if ! $OVSCTL list-ports "$Interface" | grep -q "$ovs_client"; then
        $OVSCTL add-port "$Interface" "$ovs_client"
      fi
      if [ -n "$VlanMode" ]; then
        $OVSCTL set port "$ovs_client" vlan_mode="$VlanMode"
      fi
      if [ -n "$Tag" ]; then
        $OVSCTL set port "$ovs_client" tag="$Tag"
      fi
      if [ -n "$Trunks" ]; then
        $OVSCTL set port "$ovs_client" trunks="[$Trunks]"
      fi
    done

    bring_interface_up "$Interface"
    ip_set
    return 0
}

openvswitch_down() {
    for ovs_client in "${BindsToInterfaces[@]}"; do
      ip link set "$ovs_client" promisc off down
      if $OVSCTL list-ports "$Interface" | grep -q "$ovs_client"; then
        $OVSCTL del-port "$Interface" "$ovs_client"
      fi
    done
    ip_unset
    bring_interface_down "$Interface"
    return 0
}

# vim: set ts=4 et sw=4:
